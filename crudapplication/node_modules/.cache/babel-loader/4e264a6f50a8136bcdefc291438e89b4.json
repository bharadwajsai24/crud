{"ast":null,"code":"var _jsxFileName = \"/crud/src/components/Signup/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Signup.css\";\nimport Modals from '../Modals/Modals';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { start } from '../../baseURL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [modal, setModal] = useState({\n    isShown: false,\n    ModalTitle: \"\",\n    ModalBody: \"\"\n  });\n  const history = useHistory();\n\n  function validateForm() {\n    if (password === \"\" || email === \"\" || password === \"\") {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Sinup Error\",\n        ModalBody: \"Please Enter all the details\"\n      });\n      return false;\n    }\n\n    let flag = true;\n\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Email Error\",\n        ModalBody: \"Please Enter a valid Email\"\n      });\n      return false;\n    }\n\n    if (password.length < 6) {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Password Error\",\n        ModalBody: \"Password must be more than 6 characters\"\n      });\n      return false;\n    }\n\n    if (!name.match(/[a-zA-Z]{6,}/)) {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Name Error\",\n        ModalBody: \"Name should contain only alphabets and minimum length is 6\"\n      });\n      return false;\n    }\n\n    return flag;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  const signup = async () => {\n    console.log(\"Event\");\n\n    if (!validateForm()) {\n      return;\n    }\n\n    let data = {\n      'email': email,\n      'password': password,\n      'name': name\n    };\n    const response = await axios({\n      url: start + \"/signup\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify(data)\n    });\n\n    if (response.data.status === 'false') {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Login Error\",\n        ModalBody: \"Please Enter a valid Email & Password Combination \"\n      });\n    } else {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Login Success\",\n        ModalBody: \"User Created successfully.\"\n      });\n      history.push('/login');\n    }\n  };\n\n  const signin = () => {\n    history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      \"paddingTop\": \"25px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          size: \"lg\",\n          type: \"submit\",\n          onClick: signup,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          size: \"lg\",\n          type: \"submit\",\n          onClick: signin,\n          children: \"Signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modals, {\n        isShown: modal.isShown,\n        setIsShown: setModal,\n        ModalTitle: modal.ModalTitle,\n        ModalBody: modal.ModalBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"BhqXS9mQ9f6pXejqCcT67O6kt10=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/crud/src/components/Signup/Signup.js"],"names":["React","useState","Form","Button","Modals","useHistory","axios","start","Signup","email","setEmail","password","setPassword","name","setName","modal","setModal","isShown","ModalTitle","ModalBody","history","validateForm","flag","match","length","handleSubmit","event","preventDefault","signup","console","log","data","response","url","method","headers","JSON","stringify","status","push","signin","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Signup.css\";\nimport Modals from '../Modals/Modals';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { start } from '../../baseURL';\nconst Signup = () => {\n\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [modal, setModal] = useState({\n    isShown: false,\n    ModalTitle: \"\",\n    ModalBody: \"\",\n  });\n  const history = useHistory();\n\n\n  function validateForm() {\n    if (password === \"\" || email === \"\" || password === \"\") {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Sinup Error\",\n        ModalBody: \"Please Enter all the details\"\n      });\n      return false;\n    }\n    let flag = true;\n\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Email Error\",\n        ModalBody: \"Please Enter a valid Email\"\n      });\n\n      return false;\n    }\n\n    if (password.length < 6) {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Password Error\",\n        ModalBody: \"Password must be more than 6 characters\"\n      });\n\n\n      return false;\n    }\n\n    if (!name.match(/[a-zA-Z]{6,}/)) {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Name Error\",\n        ModalBody: \"Name should contain only alphabets and minimum length is 6\"\n      });\n\n      return false;\n    }\n    return flag;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  const signup = async () => {\n    console.log(\"Event\");\n    if (!validateForm()) {\n      return;\n    }\n    let data = { 'email': email, 'password': password, 'name': name };\n    const response = await axios({\n      url: start + \"/signup\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: JSON.stringify(data),\n    });\n    if (response.data.status === 'false') {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Login Error\",\n        ModalBody: \"Please Enter a valid Email & Password Combination \"\n      });\n    }\n    else {\n\n      setModal({\n        isShown: true,\n        ModalTitle: \"Login Success\",\n        ModalBody: \"User Created successfully.\"\n      });\n      history.push('/login');\n    }\n\n\n\n\n\n  }\n\n\n  const signin = () => {\n\n    history.push(\"/login\");\n\n  }\n\n  return (\n    <div className=\"container\" style={{ \"paddingTop\": \"25px\" }}>\n      <h3>signup</h3>\n      <hr />\n      <div className=\"Login\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Group size=\"lg\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group size=\"lg\" controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group size=\"lg\" controlId=\"password\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n          <Button block size=\"lg\" type=\"submit\" onClick={signup}>\n            Signup\n        </Button>\n          <Button block size=\"lg\" type=\"submit\" onClick={signin}>\n            Signin\n        </Button>\n        </Form>\n        <Modals\n          isShown={modal.isShown}\n          setIsShown={setModal}\n          ModalTitle={modal.ModalTitle}\n          ModalBody={modal.ModalBody}\n        />\n      </div>\n    </div>\n  );\n}\nexport default Signup;"]},"metadata":{},"sourceType":"module"}